[{"id":0,"href":"/aed-docs/docs/info-provechosa/","title":"Info Provechosa","section":"Docs","content":""},{"id":1,"href":"/aed-docs/docs/info-provechosa/condiciones/","title":"Condiciones","section":"Info Provechosa","content":" Modos y Condiciones para vencer # Modo de evaluarnos # En tu travesía académica por los dominios de los algoritmos, serás sometido a las siguientes pruebas y desafíos:\n3 Parciales, precedidos de un Trabajo Práctico cada uno. 2 Laboratorios, uno de Pascal y otro de C. 20 Cuestionarios del Campus Virtual. Condiciones para aprobar # Para obtener el triunfo y aprobar de forma directa, deberás superar los siguientes desafíos con destreza y sabiduría:\nAprobar los 3 parciales con 6 o más. Aprobar el Laboratorio de Pascal. Aprobar el Laboratorio de C. Promediar 6 o más en los cuestionarios del aula. Tener asistencia mínima de 75%. Recuerda que, en caso de necesitarlo, tendrás la oportunidad de recuperar un solo parcial.\nY en cuanto a la aprobación de la cursada, tendrás las mismas condiciones que en la forma directa, pero podrás recuperar todos los parciales y laboratorios.\nEn caso de pérdida de regularidad # Conforme a la Ordenanza N° 6908-U, en circunstancias excepcionales, como en el notable incremento de estudiantes recursantes en esta materia, la Secretaría Ausedémica ha dispuesto una medida extraordinaria para aquellos que no hayan cumplido con los requisitos mínimos.\nPara solicitar la aplicación de esta medida excepcional, se requiere completar el siguiente formulario de manera precisa y detallada:\nSolicitud de Regularidad "},{"id":2,"href":"/aed-docs/docs/info-provechosa/excalibur/","title":"Excalibur","section":"Info Provechosa","content":" Links de Excalibur # ¡El legendario Biolin se alza frente a ti! En este prodigioso artefacto, descubrirás enlaces de gran valía y la posibilidad de completar los formularios de asistencia a clase.\nSin embargo, ten cuidado, pues sus raíces ocultas podrían asfixiarte de información publicitaria. Te sugiero sin reparo, que lo abras en una pestaña de incógnito con un ad-blocker de ser posible.\nBiolin ☠️ Pocas páginas ostentan tanta belleza y utilidad como la aquí presentada. Sin embargo, su misterio también puede sembrar el terror entre los estudiantes insomnes.\nGuía de Práctica Y por último, el enlace más controvertido, del cual no estoy seguro si incomoda a la cátedra. Si así fuese, ruego que me lo hagan saber para borrarlo de la existencia.\nEjercicios Resueltos (github) Sin embargo, quiero dejar en claro que mi intención con este repositorio es noble: compartir ayuda para aquellos que no comprendan algunos ejercicios y, a su vez, recibir asistencia cuando yo no entienda otros. Además, considero que este método es más cómodo para consumir y distribuir que la forma en que muchos comparten archivos sueltos o capturas. No anticipio problemas, ya que he encontrado al menos dos repositorios similares que aparentemente no han enfrentado inconvenientes. Me arriesgo por esta causa.\n"},{"id":3,"href":"/aed-docs/docs/info-provechosa/profesores/","title":"Profesores","section":"Info Provechosa","content":" Nuestros Profesores # ¡Honrad a aquellos que nos guían con sabiduría y experiencia!\nTeoría Mirtha Giovannini Práctica Axel Robles Valentina Sosa María José Ojeda Celina González Florencia Galarza Renzo Urturi Santiago Scacciaferro Wyss "},{"id":4,"href":"/aed-docs/docs/teoria/concept-iniciales/algoritmos/","title":"Algoritmos","section":"Docs","content":" Concepto de Algorítmos # En un mundo digital cada vez más complejo, los algoritmos emergen como poderosas secuencias de instrucciones y reglas que desbloquean las puertas del conocimiento, trazando caminos que resuelven problemas y moldean nuestras experiencias.\nFormalmente hablando, sería:\nNoun: Algorítmo /ˈalɡərɪð(ə)m/ Una secuencia finita de instrucciones, que describen de modo preciso las operaciones que una computadora debe realizar para ejecutar una tarea determinada en un tiempo finito. Los pasos para crear un algoritmo son los siguientes:\nIdentificar los resultados esperados: Es fundamental tener claros los objetivos que se desean alcanzar y comprender el problema que se busca resolver.\nDeterminar los datos de entrada: Es necesario evaluar si los datos disponibles son suficientes para lograr los resultados deseados. Se deben definir los datos con los que se trabajará.\nPlantear los procesos necesarios: Si se cuenta con los datos completos y los objetivos están claros, se deben establecer los pasos o procesos requeridos para transformar los datos de entrada en los datos de salida.\nUn algoritmo resuelve problemas cuando se diseña una secuencia ordenada de pasos, que despues se convierte en un programa usando un lenguaje de programación y luego este se ejecuta y verifica en una computadora para asegurar de su correcto funcionamiento.\nCaracterísticas de los algorítmos # Todo algoritmo tiene estas características fundamentales:\nSer preciso y mostrar el orden de los pasos. Estar bien definido, dando el mismo resultado cada vez que se sigue. Ser finito, es decir, tener un número limitado de pasos y terminar en algún momento. Ser correcto, produciendo el resultado esperado. Ser independiente del lenguaje de programación y la computadora utilizada. La definición de un algoritmo debe describir tres partes: Entrada, Proceso y Salida. Ejemplo 1\nDesarrolle un algoritmo que determine si un número es par o impar.\nSolución\nPrimero vamos a indicar cuáles serían las partes necesarias:\nEntrada: Solicitar al usuario que ingrese un número X Proceso: Dividir por dos el número X. Salida: Si el resto de la división es 0, entonces informar el número X es par. Sino informar que es impar. "},{"id":5,"href":"/aed-docs/docs/teoria/concept-iniciales/proceso-accion-estado/","title":"Proceso Accion Estado","section":"Docs","content":" Proceso, Acción y Estado # Proceso # Un proceso, en su esencia más pura, es una diminuta entidad, cuidadosamente planificada por un Sistema Operativo, emerge como una unidad elemental de trabajo.\nFormalmente:\nNoun: Proceso /process/ Una unidad de actividad que se caracteriza por la ejecución de una secuencia de instrucciones, un estado actual, y un conjunto de recursos de los sistemas asociados (hardware). Acción # En el anterior \u0026ldquo;ejemplo 1\u0026rdquo; de algoritmos, notarás que cada paso comienza con un verbo como \u0026ldquo;Solicitar\u0026rdquo;, \u0026ldquo;Ingresar\u0026rdquo;, \u0026ldquo;Dividir\u0026rdquo;, entre otros. Los verbos representan acciones, y todos sabemos que implican hacer algo.\nSegún la academia:\nNoun: Acción /ac-yion/ Es un acontecimiento producido por un actor que tiene un tiempo finito (período), produce un resultado definido y preciso y también produce un cambio de estado. Puede parecer contradictorio, pero \u0026ldquo;construir una casa\u0026rdquo; es una acción que está compuesta por otras acciones.\nLas acciones se dividen en dos tipos:\nsimples, que se pueden hacer directamente. complejas, que requieren descomponerse en acciones más simples. La percepción de lo que es simple o complejo varía de una persona a otra y depende de sus habilidades y del enfoque que le den al problema.\nClasificación de Acciones # A lo largo de nuestro viaje por esta materia, desvelaremos los secretos de estas acciones. No obstante, debes comprender cuándo desatar cada tipo de acción en el momento preciso, es de vital importancia.\nstateDiagram-v2 Acciones: Acciones Acciones --\u003e Simples Simples: Simples Simples --\u003e Asignación Asignación: Asignación Asignación --\u003e Expresión Expresión: Expresión Expresión --\u003e Incrementales Incrementales: Incrementales Incrementales --\u003e Contador Contador: Contador Incrementales --\u003e Acumulador Acumulador: Acumulador Expresión --\u003e Algebraicas Algebraicas: Algebraicas Expresión --\u003e Funcionales Funcionales: Funcionales Asignación --\u003e Pura Pura: Pura Simples --\u003e AcciónElemental AcciónElemental: Acción Elemental Acciones --\u003e Estructuradas Estructuradas: Estructuradas Estructuradas --\u003e Cíclicas Cíclicas: Cíclicas Cíclicas --\u003e Pretest Pretest: Pre-test Cíclicas --\u003e Posttest Posttest: Post-test Cíclicas --\u003e Manejadaporcontador Manejadaporcontador: Manejada por contador Estructuradas --\u003e Condicionales Condicionales: Condicionales Condicionales --\u003e CondiSimples CondiSimples: Simples Condicionales --\u003e Alternativos Alternativos: Alternativos Condicionales --\u003e SelecciónMúltiple SelecciónMúltiple: Selección Múltiple Estructuradas --\u003e Acciónconnombre Acciónconnombre: Acción con nombre Aunque parezca abrumador, es crucial presentar todas las acciones en su conjunto para tener una visión global y comprensiva. De todas formas, voy a separarlas en dos grupos para que se puedan ver mejor. Comenzaré mostrando las simples:\nstateDiagram-v2 Simples: Simples Simples --\u003e Asignación Asignación: Asignación Asignación --\u003e Expresión Expresión: Expresión Expresión --\u003e Incrementales Incrementales: Incrementales Incrementales --\u003e Contador Contador: Contador Incrementales --\u003e Acumulador Acumulador: Acumulador Expresión --\u003e Algebraicas Algebraicas: Algebraicas Expresión --\u003e Funcionales Funcionales: Funcionales Asignación --\u003e Pura Pura: Pura Simples --\u003e AcciónElemental AcciónElemental: Acción Elemental Y ahora las complejas o estructuradas:\nstateDiagram-v2 Estructuradas: Estructuradas Estructuradas --\u003e Cíclicas Cíclicas: Cíclicas Cíclicas --\u003e Pretest Pretest: Pre-test Cíclicas --\u003e Posttest Posttest: Post-test Cíclicas --\u003e Manejadaporcontador Manejadaporcontador: Manejada por contador Estructuradas --\u003e Condicionales Condicionales: Condicionales Condicionales --\u003e CondiSimples CondiSimples: Simples Condicionales --\u003e Alternativos Alternativos: Alternativos Condicionales --\u003e SelecciónMúltiple SelecciónMúltiple: Selección Múltiple Estructuradas --\u003e Acciónconnombre Acciónconnombre: Acción con nombre "},{"id":6,"href":"/aed-docs/docs/teoria/estructuras-datos-simples/estructuras-datos-simples/","title":"Estructuras Datos Simples","section":"Docs","content":" Estructuras de Datos Simples # A la hora de elaborar un programa, es necesario utilizar datos. Por ejemplo, si queremos calcular el área de un rectángulo, debemos almacenar en la memoria de la computadora los valores de la base y la altura para luego multiplicarlos y obtener el área.\nEs importante recordar que hay una diferencia entre grabar los datos en la memoria y grabarlos en el disco duro. Cuando hablamos de grabar en memoria, nos referimos a almacenar los datos en la RAM. Para hacer esto, utilizamos dos elementos: variables y constantes. Estos nos permiten guardar y manipular los datos necesarios para realizar los cálculos en el programa.\nVariables # Son elementos de almacenamiento de datos. Representan una dirección de memoria en donde se almacena un dato, y su contenido puede variar en el desarrollo del algoritmo. Constantes # Al igual que una variable, representa una zona de memoria en la cual se almacena un dato. Sin embargo su contenido no puede modificarse durante la ejecución. Antes de asignarle un valor, debemos definirlas de la siguiente manera:\nVariables a : Entero Constantes a = Entero En este caso a es cómo queremos nombrar a la variable/constante. Dependiendo de si es variable o constante, debemos usar el símbolo : | = según corresponda. En este caso Entero es el tipo de datos que se asocia a la variable/constante, podemos usar cualquiera de los mencionados anteriormente. Cómo nombrar variables y constantes # Deben tener un nombre representativo.\n“a” es 💤 | “contpalabras” es 👼\nAdemás hay que tratar de abreviar las palabras claramente.\n“contpalimpar” 👍\nY también… Letra chica No pueden iniciar con números.\nej: 123var\nNo se distingue entre mayúsculas y minúsculas.\nej: var y VAR\nNo tener espacios.\nej: esto es un nombre incorrecto: Entero\nNo tener “símbolos raros”.\nsímbolos permitidos: “-” o “_”\nNo tiene que ser una palabra reservada\nej: leer, escribir\n"},{"id":7,"href":"/aed-docs/docs/teoria/pseudocodigo/","title":"Pseudocodigo","section":"Docs","content":" Pseudocódigo # Los algoritmos trascienden a los lenguajes de programación, pudiendose representar de diversas maneras. En esta cursada, solo nos centraremos en el pseudocódigo, pero pueden investigar sobre las demás formas por su cuenta.\nPero entonces ¿qué es ese tal pseudocódigo?\nNoun: Pseudocódigo /pseudo/ Es un lenguaje similar al inglés utilizado para representar estructuras de control en programación estructurada.\nAunque es un primer borrador, debe traducirse a un lenguaje de programación para ser ejecutado en una computadora.\n¿Y qué es esa programación estructurada?\nLa programación estructurada es un enfoque metódico y científico para diseñar y escribir programas, alejándose del método de prueba y error.\nSe fundamenta en dos aspectos clave:\nLas Características de un Algoritmo stateDiagram-v2 Uno: 1. Posee un solo punto de Entrada y de salida. Uno --\u003e Dos Dos: 2. Todas las acciones deben ser accesibles. note right of Dos Debe haber al menos un camino desde el principio hasta el final que pase por cada accion. end note Dos --\u003e Tres Tres: 3. No posee ciclos o bucles infinitos. El Teorema de la Programación Estructurada: postula que todo algoritmo estructurado puede ser escrito utilizando únicamente tres tipos de estructuras de control secuenciales. Secuenciales Condicionales Repetitivas Ventajas del pseudocódigo ... El uso de Pseudocódigo en lugar de Diagramas de Flujo tiene ventajas, como la capacidad de representar de manera sencilla operaciones repetitivas complejas. Además, es fácil convertir una solución en Pseudocódigo a un programa en cualquier lenguaje de programación. Siguiendo las reglas, se pueden visualizar claramente los niveles de cada operación. "},{"id":8,"href":"/aed-docs/docs/teoria/tipos-datos/alfanumericos/","title":"Alfanumericos","section":"Docs","content":" Alfanumericos # En una presentación del profe Axel, se mencionaban a los alfanuméricos como un conjunto de caracteres.\nEjemplo:\n\u0026#34;hola señor kiosquero...\u0026#34; | \u0026#34;192./aa321\u0026#34; | \u0026#34;rm -rf /\u0026#34; | \u0026#34;\u0026amp;asd\u0026#34; | ... Y a estos, se les puede especificar su longitud de la siguiente forma:\nAlfanumérico(20) o AN(20) En este caso, se quiere que el limite de carácteres sea 20.\nCarácter # Cuando se piensa, en cada letra, número o símbolo solitario, la figura del \u0026ldquo;carácter\u0026rdquo; emerge ante nosotros.\nEjemplo:\n\u0026#34;1\u0026#34; | \u0026#34;a\u0026#34; | \u0026#34;B\u0026#34; | \u0026#34;\u0026amp;\u0026#34; | ... "},{"id":9,"href":"/aed-docs/docs/teoria/tipos-datos/logicos/","title":"Logicos","section":"Docs","content":" Lógicos o Booleanos # El tipo de dato que solo puede tener dos valores: Falso ❌ y verdadero ✔️. Se utiliza, por ejemplo, cuando se desea determinar si un número es primo o no.\nEjemplo:\nVerdadero | Falso "},{"id":10,"href":"/aed-docs/docs/teoria/tipos-datos/numericos/","title":"Numericos","section":"Docs","content":" Tipos de Datos Numericos # Para iniciar con esta sección con un chiste, que no me acuerdo de dónde lo robé\u0026hellip;\n🤡 \u0026quot;Dios es real, a menos que sea declarado entero.\u0026quot; Ya está loco, me voy al \u0026hellip;\nEnteros # Son un conjunto finito de valores que no contienen partes fraccionarias o decimales, y pueden ser tanto positivos como negativos. Se utilizan para representar cantidades completas, como la edad de una persona, que siempre se considera un valor entero.\nEjemplo:\n4 | 434 | 565546 | ... Reales # Son un subconjunto de los números reales que siempre incluyen un punto decimal y pueden ser positivos o negativos. Se utilizan para representar valores que tienen componentes fraccionarios, como el peso de una persona.\nEjemplo:\n3.14 | 12838.49586 | ... En la mayoría de los lenguajes de programación, es necesario utilizar el punto (.) en lugar de la coma (,) al escribir números reales. Esto se debe a que estos lenguajes están inspirados en el inglés y utilizan esa sintaxis. Se recomienda seguir esta convención al escribir pseudocódigo también, aunque desconozco su obligatoriedad.\n\u0026hellip;\n🤔 ¿Por qué el énfasis en diferenciar los datos numéricos?\nMás adelante, nos encontraremos con operadores específicos que diferencian entre la division entera y real. Esto probablemente se deba a que las computadoras a bajo nivel sean malas a la hora de dividir. "},{"id":11,"href":"/aed-docs/docs/teoria/tipos-datos/tipos-datos/","title":"Tipos Datos","section":"Docs","content":" Tipos de Datos # En esta etapa inicial, nos enfocaremos en algunos tipos de datos fundamentales, esto solo por ahora, más adelante la cosa se complica.\n🔢 Numericos 🔠 Alfanumericos 🚦 Lógicos "},{"id":12,"href":"/aed-docs/docs/","title":"Docs","section":"Bienvenidos","content":""}]