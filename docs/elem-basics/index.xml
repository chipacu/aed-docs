<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elementos B√°sicos Algor√≠tmos on ‚ôõ Apuntes de chipaco | AED 2023 K1.6</title><link>https://chipacu.github.io/aed-docs/docs/elem-basics/</link><description>Recent content in Elementos B√°sicos Algor√≠tmos on ‚ôõ Apuntes de chipaco | AED 2023 K1.6</description><generator>Hugo -- gohugo.io</generator><language>es-ar</language><atom:link href="https://chipacu.github.io/aed-docs/docs/elem-basics/index.xml" rel="self" type="application/rss+xml"/><item><title>Tipos de Datos</title><link>https://chipacu.github.io/aed-docs/docs/elem-basics/tipos-datos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chipacu.github.io/aed-docs/docs/elem-basics/tipos-datos/</guid><description>Tipos de datos # En esta etapa inicial, nos enfocaremos en algunos tipos de datos fundamentales, esto solo por ahora, m√°s adelante la cosa se complica.
Numericos # Para iniciar con esta secci√≥n, un chiste&amp;hellip;
ü§° &amp;quot;Dios es real, a menos que sea declarado entero.&amp;quot; Ya est√° loco, me voy al &amp;hellip;
Enteros # Son un conjunto finito de valores que no contienen partes fraccionarias o decimales, y pueden ser tanto positivos como negativos.</description></item><item><title>Estructuras de Datos Simples</title><link>https://chipacu.github.io/aed-docs/docs/elem-basics/estructuras-datos-simples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chipacu.github.io/aed-docs/docs/elem-basics/estructuras-datos-simples/</guid><description>Estructuras de Datos Simples # A la hora de elaborar un programa, es necesario utilizar datos. Por ejemplo, si queremos calcular el √°rea de un rect√°ngulo, debemos almacenar en la memoria de la computadora los valores de la base y la altura para luego multiplicarlos y obtener el √°rea.
Es importante recordar que hay una diferencia entre grabar los datos en la memoria y grabarlos en el disco duro. Cuando hablamos de grabar en memoria, nos referimos a almacenar los datos en la RAM.</description></item><item><title>Operadores y Operandos</title><link>https://chipacu.github.io/aed-docs/docs/elem-basics/operadores-operandos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chipacu.github.io/aed-docs/docs/elem-basics/operadores-operandos/</guid><description>Operadores y Operandos # Los programas de computadora se basan en la realizaci√≥n de muchas operaciones aritm√©ticas y matem√°ticas de diversas complejidades.
Noun: Operador /operasao/ Es el s√≠mbolo que determina el tipo de operaci√≥n o relaci√≥n que habr√° de establecerse entre los operandos para alcanzar un resultado. Los operadores nos permiten manipular datos, ya sean variables, constantes u otras expresiones. Podemos utilizarlos para transformar datos, controlar el flujo de ejecuci√≥n de un programa mediante decisiones y formar valores para asignar a otros datos.</description></item><item><title>Entrada y Salida de Datos</title><link>https://chipacu.github.io/aed-docs/docs/elem-basics/entrada-salida/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chipacu.github.io/aed-docs/docs/elem-basics/entrada-salida/</guid><description>Entradas y Salida de Datos # Son dos acciones con nombre que se emplean en los primeros algoritmos. La informaci√≥n que compartir√© a continuaci√≥n est√° basada en las presentaciones de las clases pr√°cticas, as√≠ como en algunos recursos de las clases de teor√≠a.
Salida de datos # Como un susurro de conocimiento, la palabra ¬´escribir¬ª transmite los resultados del programa al mundo exterior. Los datos, imbuidos de sentido y prop√≥sito, pueden ser plasmados por pantalla.</description></item><item><title>Estructura B√°sica Pseudoc√≥digo</title><link>https://chipacu.github.io/aed-docs/docs/elem-basics/estructura-pseudo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chipacu.github.io/aed-docs/docs/elem-basics/estructura-pseudo/</guid><description>Estructura B√°sica Pseudoc√≥digo # Una vez tengas tu editor de c√≥digo y estes medio familiarizado con los conceptos b√°sicos de pseudoc√≥digo y sus elementos, vas a estar listo para enfrentarte a los primeros ejercicios del pr√°ctica.
Bueno, quiz√°s no, te faltan las partes m√°s importantes, la estructura que funje como esqueleto de tu algor√≠tmo.
Accion Un_ejemplo es Ambiente // aqu√≠ se declaran variables/c, se definen funciones/p... Algoritmo // donde ocurre la magia.</description></item></channel></rss>